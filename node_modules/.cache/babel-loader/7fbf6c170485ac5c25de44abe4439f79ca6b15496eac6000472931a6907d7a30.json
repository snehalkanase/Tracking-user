{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  constructor() {\n    /**\n     * Permission to access service level APIs granted.\n     */\n    this.service = false;\n    /**\n     * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n     */\n    this.container = false;\n    /**\n     * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n     */\n    this.object = false;\n  }\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  static parse(resourceTypes) {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n    return accountSASResourceTypes;\n  }\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  toString() {\n    const resourceTypes = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}","map":{"version":3,"names":["AccountSASResourceTypes","constructor","service","container","object","parse","resourceTypes","accountSASResourceTypes","c","RangeError","toString","push","join"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\sas\\AccountSASResourceTypes.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA;;;;;;;;;AASA,OAAM,MAAOA,uBAAuB;EAApCC,YAAA;IA6BE;;;IAGO,KAAAC,OAAO,GAAY,KAAK;IAE/B;;;IAGO,KAAAC,SAAS,GAAY,KAAK;IAEjC;;;IAGO,KAAAC,MAAM,GAAY,KAAK;EAqBhC;EA9DE;;;;;;EAMO,OAAOC,KAAKA,CAACC,aAAqB;IACvC,MAAMC,uBAAuB,GAAG,IAAIP,uBAAuB,EAAE;IAE7D,KAAK,MAAMQ,CAAC,IAAIF,aAAa,EAAE;MAC7B,QAAQE,CAAC;QACP,KAAK,GAAG;UACND,uBAAuB,CAACL,OAAO,GAAG,IAAI;UACtC;QACF,KAAK,GAAG;UACNK,uBAAuB,CAACJ,SAAS,GAAG,IAAI;UACxC;QACF,KAAK,GAAG;UACNI,uBAAuB,CAACH,MAAM,GAAG,IAAI;UACrC;QACF;UACE,MAAM,IAAIK,UAAU,CAAC,0BAA0BD,CAAC,EAAE,CAAC;;;IAIzD,OAAOD,uBAAuB;EAChC;EAiBA;;;;;;EAMOG,QAAQA,CAAA;IACb,MAAMJ,aAAa,GAAa,EAAE;IAClC,IAAI,IAAI,CAACJ,OAAO,EAAE;MAChBI,aAAa,CAACK,IAAI,CAAC,GAAG,CAAC;;IAEzB,IAAI,IAAI,CAACR,SAAS,EAAE;MAClBG,aAAa,CAACK,IAAI,CAAC,GAAG,CAAC;;IAEzB,IAAI,IAAI,CAACP,MAAM,EAAE;MACfE,aAAa,CAACK,IAAI,CAAC,GAAG,CAAC;;IAEzB,OAAOL,aAAa,CAACM,IAAI,CAAC,EAAE,CAAC;EAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}