{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential {\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n    this._key = key;\n  }\n  /**\n   * The value of the key to be used in authentication\n   */\n  get key() {\n    return this._key;\n  }\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  update(newKey) {\n    this._key = newKey;\n  }\n}","map":{"version":3,"names":["AzureKeyCredential","constructor","key","Error","_key","update","newKey"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-auth\\src\\azureKeyCredential.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Represents a credential defined by a static API key.\n */\nexport interface KeyCredential {\n  /**\n   * The value of the API key represented as a string\n   */\n  readonly key: string;\n}\n\n/**\n * A static-key-based credential that supports updating\n * the underlying key value.\n */\nexport class AzureKeyCredential implements KeyCredential {\n  private _key: string;\n\n  /**\n   * The value of the key to be used in authentication\n   */\n  public get key(): string {\n    return this._key;\n  }\n\n  /**\n   * Create an instance of an AzureKeyCredential for use\n   * with a service client.\n   *\n   * @param key - The initial value of the key to use in authentication\n   */\n  constructor(key: string) {\n    if (!key) {\n      throw new Error(\"key must be a non-empty string\");\n    }\n\n    this._key = key;\n  }\n\n  /**\n   * Change the value of the key.\n   *\n   * Updates will take effect upon the next request after\n   * updating the key value.\n   *\n   * @param newKey - The new key value to be used\n   */\n  public update(newKey: string): void {\n    this._key = newKey;\n  }\n}\n"],"mappings":"AAAA;AACA;AAYA;;;;AAIA,OAAM,MAAOA,kBAAkB;EAU7B;;;;;;EAMAC,YAAYC,GAAW;IACrB,IAAI,CAACA,GAAG,EAAE;MACR,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;;IAGnD,IAAI,CAACC,IAAI,GAAGF,GAAG;EACjB;EAnBA;;;EAGA,IAAWA,GAAGA,CAAA;IACZ,OAAO,IAAI,CAACE,IAAI;EAClB;EAgBA;;;;;;;;EAQOC,MAAMA,CAACC,MAAc;IAC1B,IAAI,CAACF,IAAI,GAAGE,MAAM;EACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}