{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nexport const DefaultKeepAliveOptions = {\n  enable: true\n};\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nexport function keepAlivePolicy(keepAliveOptions) {\n  return {\n    create: (nextPolicy, options) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(nextPolicy, options, keepAliveOptions) {\n    super(nextPolicy, options);\n    this.keepAliveOptions = keepAliveOptions;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  async sendRequest(request) {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}","map":{"version":3,"names":["BaseRequestPolicy","DefaultKeepAliveOptions","enable","keepAlivePolicy","keepAliveOptions","create","nextPolicy","options","KeepAlivePolicy","constructor","sendRequest","request","keepAlive","_nextPolicy"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\policies\\keepAlivePolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Options for how HTTP connections should be maintained for future\n * requests.\n */\nexport interface KeepAliveOptions {\n  /**\n   * When true, connections will be kept alive for multiple requests.\n   * Defaults to true.\n   */\n  enable: boolean;\n}\n\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nexport const DefaultKeepAliveOptions: KeepAliveOptions = {\n  enable: true,\n};\n\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nexport function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    },\n  };\n}\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private readonly keepAliveOptions: KeepAliveOptions\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAgBxB;;;AAGA,OAAO,MAAMC,uBAAuB,GAAqB;EACvDC,MAAM,EAAE;CACT;AAED;;;;;AAKA,OAAM,SAAUC,eAAeA,CAACC,gBAAmC;EACjE,OAAO;IACLC,MAAM,EAAEA,CAACC,UAAyB,EAAEC,OAA6B,KAAI;MACnE,OAAO,IAAIC,eAAe,CAACF,UAAU,EAAEC,OAAO,EAAEH,gBAAgB,IAAIH,uBAAuB,CAAC;IAC9F;GACD;AACH;AAEA;;;AAGA,OAAM,MAAOO,eAAgB,SAAQR,iBAAiB;EACpD;;;;;;;EAOAS,YACEH,UAAyB,EACzBC,OAA6B,EACZH,gBAAkC;IAEnD,KAAK,CAACE,UAAU,EAAEC,OAAO,CAAC;IAFT,KAAAH,gBAAgB,GAAhBA,gBAAgB;EAGnC;EAEA;;;;;;EAMO,MAAMM,WAAWA,CAACC,OAAwB;IAC/CA,OAAO,CAACC,SAAS,GAAG,IAAI,CAACR,gBAAgB,CAACF,MAAM;IAChD,OAAO,IAAI,CAACW,WAAW,CAACH,WAAW,CAACC,OAAO,CAAC;EAC9C"},"metadata":{},"sourceType":"module","externalDependencies":[]}