{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport * as coreHttp from \"@azure/core-http\";\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.14.0\";\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url, options) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n    super(undefined, options);\n    this.requestContentType = \"application/json; charset=utf-8\";\n    this.baseUri = options.endpoint || \"{url}\";\n    // Parameter assignments\n    this.url = url;\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2022-11-02\";\n  }\n}","map":{"version":3,"names":["coreHttp","packageName","packageVersion","StorageClientContext","ServiceClient","constructor","url","options","undefined","Error","userAgent","defaultUserAgent","getDefaultUserAgentValue","requestContentType","baseUri","endpoint","version"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\generated\\src\\storageClientContext.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-storage-blob\";\nconst packageVersion = \"12.14.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{url}\";\n\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2022-11-02\";\n  }\n}\n"],"mappings":"AAAA;;;;;;;AAQA,OAAO,KAAKA,QAAQ,MAAM,kBAAkB;AAG5C,MAAMC,WAAW,GAAG,oBAAoB;AACxC,MAAMC,cAAc,GAAG,SAAS;AAEhC,OAAM,MAAOC,oBAAqB,SAAQH,QAAQ,CAACI,aAAa;EAI9D;;;;;;EAMAC,YAAYC,GAAW,EAAEC,OAAqC;IAC5D,IAAID,GAAG,KAAKE,SAAS,EAAE;MACrB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;;IAGzC;IACA,IAAI,CAACF,OAAO,EAAE;MACZA,OAAO,GAAG,EAAE;;IAGd,IAAI,CAACA,OAAO,CAACG,SAAS,EAAE;MACtB,MAAMC,gBAAgB,GAAGX,QAAQ,CAACY,wBAAwB,EAAE;MAC5DL,OAAO,CAACG,SAAS,GAAG,GAAGT,WAAW,IAAIC,cAAc,IAAIS,gBAAgB,EAAE;;IAG5E,KAAK,CAACH,SAAS,EAAED,OAAO,CAAC;IAEzB,IAAI,CAACM,kBAAkB,GAAG,iCAAiC;IAE3D,IAAI,CAACC,OAAO,GAAGP,OAAO,CAACQ,QAAQ,IAAI,OAAO;IAE1C;IACA,IAAI,CAACT,GAAG,GAAGA,GAAG;IAEd;IACA,IAAI,CAACU,OAAO,GAAGT,OAAO,CAACS,OAAO,IAAI,YAAY;EAChD"},"metadata":{},"sourceType":"module","externalDependencies":[]}