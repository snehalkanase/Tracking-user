{"ast":null,"code":"import _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport var AnonymousCredentialPolicy = /*#__PURE__*/function (_CredentialPolicy) {\n  _inherits(AnonymousCredentialPolicy, _CredentialPolicy);\n  var _super = _createSuper(AnonymousCredentialPolicy);\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  function AnonymousCredentialPolicy(nextPolicy, options) {\n    _classCallCheck(this, AnonymousCredentialPolicy);\n    return _super.call(this, nextPolicy, options);\n  }\n  return _createClass(AnonymousCredentialPolicy);\n}(CredentialPolicy);","map":{"version":3,"names":["CredentialPolicy","AnonymousCredentialPolicy","_CredentialPolicy","_inherits","_super","_createSuper","nextPolicy","options","_classCallCheck","call","_createClass"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\policies\\AnonymousCredentialPolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n"],"mappings":";;;;AAAA;AACA;AAIA,SAASA,gBAAgB,QAAQ,oBAAoB;AAErD;;;;AAIA,WAAaC,yBAA0B,0BAAAC,iBAAA;EAAAC,SAAA,CAAAF,yBAAA,EAAAC,iBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,yBAAA;EACrC;;;;;EAKA;EACA;EACA,SAAAA,0BAAYK,UAAyB,EAAEC,OAA6B;IAAAC,eAAA,OAAAP,yBAAA;IAAA,OAAAG,MAAA,CAAAK,IAAA,OAC5DH,UAAU,EAAEC,OAAO;EAC3B;EAAC,OAAAG,YAAA,CAAAT,yBAAA;AAAA,EAV4CD,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}