{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nvar MutexLockStatus;\n(function (MutexLockStatus) {\n  MutexLockStatus[MutexLockStatus[\"LOCKED\"] = 0] = \"LOCKED\";\n  MutexLockStatus[MutexLockStatus[\"UNLOCKED\"] = 1] = \"UNLOCKED\";\n})(MutexLockStatus || (MutexLockStatus = {}));\n/**\n * An async mutex lock.\n */\nexport var Mutex = /*#__PURE__*/function () {\n  function Mutex() {\n    _classCallCheck(this, Mutex);\n  }\n  _createClass(Mutex, null, [{\n    key: \"lock\",\n    value:\n    /**\n     * Lock for a specific key. If the lock has been acquired by another customer, then\n     * will wait until getting the lock.\n     *\n     * @param key - lock key\n     */\n    function () {\n      var _lock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(key) {\n        var _this = this;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", new Promise(function (resolve) {\n                if (_this.keys[key] === undefined || _this.keys[key] === MutexLockStatus.UNLOCKED) {\n                  _this.keys[key] = MutexLockStatus.LOCKED;\n                  resolve();\n                } else {\n                  _this.onUnlockEvent(key, function () {\n                    _this.keys[key] = MutexLockStatus.LOCKED;\n                    resolve();\n                  });\n                }\n              }));\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      function lock(_x) {\n        return _lock.apply(this, arguments);\n      }\n      return lock;\n    }()\n    /**\n     * Unlock a key.\n     *\n     * @param key -\n     */\n  }, {\n    key: \"unlock\",\n    value: function () {\n      var _unlock = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(key) {\n        var _this2 = this;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", new Promise(function (resolve) {\n                if (_this2.keys[key] === MutexLockStatus.LOCKED) {\n                  _this2.emitUnlockEvent(key);\n                }\n                delete _this2.keys[key];\n                resolve();\n              }));\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n      function unlock(_x2) {\n        return _unlock.apply(this, arguments);\n      }\n      return unlock;\n    }()\n  }, {\n    key: \"onUnlockEvent\",\n    value: function onUnlockEvent(key, handler) {\n      if (this.listeners[key] === undefined) {\n        this.listeners[key] = [handler];\n      } else {\n        this.listeners[key].push(handler);\n      }\n    }\n  }, {\n    key: \"emitUnlockEvent\",\n    value: function emitUnlockEvent(key) {\n      var _this3 = this;\n      if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n        var handler = this.listeners[key].shift();\n        setImmediate(function () {\n          handler.call(_this3);\n        });\n      }\n    }\n  }]);\n  return Mutex;\n}();\nMutex.keys = {};\nMutex.listeners = {};","map":{"version":3,"names":["MutexLockStatus","Mutex","_classCallCheck","_createClass","key","value","_lock","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this","wrap","_callee$","_context","prev","next","abrupt","Promise","resolve","keys","undefined","UNLOCKED","LOCKED","onUnlockEvent","stop","lock","_x","apply","arguments","_unlock","_callee2","_this2","_callee2$","_context2","emitUnlockEvent","unlock","_x2","handler","listeners","push","_this3","length","shift","setImmediate","call"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\utils\\Mutex.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nenum MutexLockStatus {\n  LOCKED,\n  UNLOCKED,\n}\n\ntype Callback = (...args: any[]) => any;\n\n/**\n * An async mutex lock.\n */\nexport class Mutex {\n  /**\n   * Lock for a specific key. If the lock has been acquired by another customer, then\n   * will wait until getting the lock.\n   *\n   * @param key - lock key\n   */\n  public static async lock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === undefined || this.keys[key] === MutexLockStatus.UNLOCKED) {\n        this.keys[key] = MutexLockStatus.LOCKED;\n        resolve();\n      } else {\n        this.onUnlockEvent(key, () => {\n          this.keys[key] = MutexLockStatus.LOCKED;\n          resolve();\n        });\n      }\n    });\n  }\n\n  /**\n   * Unlock a key.\n   *\n   * @param key -\n   */\n  public static async unlock(key: string): Promise<void> {\n    return new Promise<void>((resolve) => {\n      if (this.keys[key] === MutexLockStatus.LOCKED) {\n        this.emitUnlockEvent(key);\n      }\n      delete this.keys[key];\n      resolve();\n    });\n  }\n\n  private static keys: { [key: string]: MutexLockStatus } = {};\n  private static listeners: { [key: string]: Callback[] } = {};\n\n  private static onUnlockEvent(key: string, handler: Callback) {\n    if (this.listeners[key] === undefined) {\n      this.listeners[key] = [handler];\n    } else {\n      this.listeners[key].push(handler);\n    }\n  }\n\n  private static emitUnlockEvent(key: string) {\n    if (this.listeners[key] !== undefined && this.listeners[key].length > 0) {\n      const handler = this.listeners[key].shift();\n      setImmediate(() => {\n        handler!.call(this);\n      });\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}