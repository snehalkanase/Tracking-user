{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport var DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport var DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport var DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport var DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\nexport function isNumber(n) {\n  return typeof n === \"number\";\n}\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(retryLimit, predicate, retryData, response, error) {\n  if (!predicate(response, error)) {\n    return false;\n  }\n  return retryData.retryCount < retryLimit;\n}\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nexport function updateRetryData(retryOptions) {\n  var retryData = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    retryCount: 0,\n    retryInterval: 0\n  };\n  var err = arguments.length > 2 ? arguments[2] : undefined;\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n    retryData.error = err;\n  }\n  // Adjust retry count\n  retryData.retryCount++;\n  // Adjust retry interval\n  var incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n  var boundedRandDelta = retryOptions.retryInterval * 0.8 + Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n  incrementDelta *= boundedRandDelta;\n  retryData.retryInterval = Math.min(retryOptions.minRetryInterval + incrementDelta, retryOptions.maxRetryInterval);\n  return retryData;\n}","map":{"version":3,"names":["DEFAULT_CLIENT_RETRY_COUNT","DEFAULT_CLIENT_RETRY_INTERVAL","DEFAULT_CLIENT_MAX_RETRY_INTERVAL","DEFAULT_CLIENT_MIN_RETRY_INTERVAL","isNumber","n","shouldRetry","retryLimit","predicate","retryData","response","error","retryCount","updateRetryData","retryOptions","arguments","length","undefined","retryInterval","err","innerError","incrementDelta","Math","pow","boundedRandDelta","floor","random","min","minRetryInterval","maxRetryInterval"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\util\\exponentialBackoffStrategy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpOperationResponse } from \"..\";\n\nexport const DEFAULT_CLIENT_RETRY_COUNT = 3;\n// intervals are in ms\nexport const DEFAULT_CLIENT_RETRY_INTERVAL = 1000 * 30;\nexport const DEFAULT_CLIENT_MAX_RETRY_INTERVAL = 1000 * 90;\nexport const DEFAULT_CLIENT_MIN_RETRY_INTERVAL = 1000 * 3;\n\nexport function isNumber(n: unknown): n is number {\n  return typeof n === \"number\";\n}\nexport interface RetryData {\n  retryCount: number;\n  retryInterval: number;\n  error?: RetryError;\n}\n\nexport interface RetryError extends Error {\n  message: string;\n  code?: string;\n  innerError?: RetryError;\n}\n\n/**\n * @internal\n * Determines if the operation should be retried.\n *\n * @param retryLimit - Specifies the max number of retries.\n * @param predicate - Initial chekck on whether to retry based on given responses or errors\n * @param retryData -  The retry data.\n * @returns True if the operation qualifies for a retry; false otherwise.\n */\nexport function shouldRetry(\n  retryLimit: number,\n  predicate: (response?: HttpOperationResponse, error?: RetryError) => boolean,\n  retryData: RetryData,\n  response?: HttpOperationResponse,\n  error?: RetryError\n): boolean {\n  if (!predicate(response, error)) {\n    return false;\n  }\n\n  return retryData.retryCount < retryLimit;\n}\n\n/**\n * @internal\n * Updates the retry data for the next attempt.\n *\n * @param retryOptions - specifies retry interval, and its lower bound and upper bound.\n * @param retryData -  The retry data.\n * @param err - The operation\"s error, if any.\n */\nexport function updateRetryData(\n  retryOptions: { retryInterval: number; minRetryInterval: number; maxRetryInterval: number },\n  retryData: RetryData = { retryCount: 0, retryInterval: 0 },\n  err?: RetryError\n): RetryData {\n  if (err) {\n    if (retryData.error) {\n      err.innerError = retryData.error;\n    }\n\n    retryData.error = err;\n  }\n\n  // Adjust retry count\n  retryData.retryCount++;\n\n  // Adjust retry interval\n  let incrementDelta = Math.pow(2, retryData.retryCount - 1) - 1;\n  const boundedRandDelta =\n    retryOptions.retryInterval * 0.8 +\n    Math.floor(Math.random() * (retryOptions.retryInterval * 0.4));\n  incrementDelta *= boundedRandDelta;\n\n  retryData.retryInterval = Math.min(\n    retryOptions.minRetryInterval + incrementDelta,\n    retryOptions.maxRetryInterval\n  );\n\n  return retryData;\n}\n"],"mappings":"AAAA;AACA;AAIA,OAAO,IAAMA,0BAA0B,GAAG,CAAC;AAC3C;AACA,OAAO,IAAMC,6BAA6B,GAAG,IAAI,GAAG,EAAE;AACtD,OAAO,IAAMC,iCAAiC,GAAG,IAAI,GAAG,EAAE;AAC1D,OAAO,IAAMC,iCAAiC,GAAG,IAAI,GAAG,CAAC;AAEzD,OAAM,SAAUC,QAAQA,CAACC,CAAU;EACjC,OAAO,OAAOA,CAAC,KAAK,QAAQ;AAC9B;AAaA;;;;;;;;;AASA,OAAM,SAAUC,WAAWA,CACzBC,UAAkB,EAClBC,SAA4E,EAC5EC,SAAoB,EACpBC,QAAgC,EAChCC,KAAkB;EAElB,IAAI,CAACH,SAAS,CAACE,QAAQ,EAAEC,KAAK,CAAC,EAAE;IAC/B,OAAO,KAAK;;EAGd,OAAOF,SAAS,CAACG,UAAU,GAAGL,UAAU;AAC1C;AAEA;;;;;;;;AAQA,OAAM,SAAUM,eAAeA,CAC7BC,YAA2F,EAE3E;EAAA,IADhBL,SAAA,GAAAM,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB;IAAEH,UAAU,EAAE,CAAC;IAAEM,aAAa,EAAE;EAAC,CAAE;EAAA,IAC1DC,GAAgB,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEhB,IAAIE,GAAG,EAAE;IACP,IAAIV,SAAS,CAACE,KAAK,EAAE;MACnBQ,GAAG,CAACC,UAAU,GAAGX,SAAS,CAACE,KAAK;;IAGlCF,SAAS,CAACE,KAAK,GAAGQ,GAAG;;EAGvB;EACAV,SAAS,CAACG,UAAU,EAAE;EAEtB;EACA,IAAIS,cAAc,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEd,SAAS,CAACG,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;EAC9D,IAAMY,gBAAgB,GACpBV,YAAY,CAACI,aAAa,GAAG,GAAG,GAChCI,IAAI,CAACG,KAAK,CAACH,IAAI,CAACI,MAAM,EAAE,IAAIZ,YAAY,CAACI,aAAa,GAAG,GAAG,CAAC,CAAC;EAChEG,cAAc,IAAIG,gBAAgB;EAElCf,SAAS,CAACS,aAAa,GAAGI,IAAI,CAACK,GAAG,CAChCb,YAAY,CAACc,gBAAgB,GAAGP,cAAc,EAC9CP,YAAY,CAACe,gBAAgB,CAC9B;EAED,OAAOpB,SAAS;AAClB"},"metadata":{},"sourceType":"module","externalDependencies":[]}