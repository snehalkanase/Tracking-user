{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { initHttpOperation, pollHttpOperation } from \"../../http/operation\";\nimport { logger } from \"../../logger\";\nvar createStateProxy = function createStateProxy() {\n  return {\n    initState: function initState(config) {\n      return {\n        config: config,\n        isStarted: true\n      };\n    },\n    setCanceled: function setCanceled(state) {\n      return state.isCancelled = true;\n    },\n    setError: function setError(state, error) {\n      return state.error = error;\n    },\n    setResult: function setResult(state, result) {\n      return state.result = result;\n    },\n    setRunning: function setRunning(state) {\n      return state.isStarted = true;\n    },\n    setSucceeded: function setSucceeded(state) {\n      return state.isCompleted = true;\n    },\n    setFailed: function setFailed() {\n      /** empty body */\n    },\n    getError: function getError(state) {\n      return state.error;\n    },\n    getResult: function getResult(state) {\n      return state.result;\n    },\n    isCanceled: function isCanceled(state) {\n      return !!state.isCancelled;\n    },\n    isFailed: function isFailed(state) {\n      return !!state.error;\n    },\n    isRunning: function isRunning(state) {\n      return !!state.isStarted;\n    },\n    isSucceeded: function isSucceeded(state) {\n      return Boolean(state.isCompleted && !state.isCancelled && !state.error);\n    }\n  };\n};\nexport var GenericPollOperation = /*#__PURE__*/function () {\n  function GenericPollOperation(state, lro, setErrorAsResult, lroResourceLocationConfig, processResult, updateState, isDone) {\n    _classCallCheck(this, GenericPollOperation);\n    this.state = state;\n    this.lro = lro;\n    this.setErrorAsResult = setErrorAsResult;\n    this.lroResourceLocationConfig = lroResourceLocationConfig;\n    this.processResult = processResult;\n    this.updateState = updateState;\n    this.isDone = isDone;\n  }\n  _createClass(GenericPollOperation, [{\n    key: \"setPollerConfig\",\n    value: function setPollerConfig(pollerConfig) {\n      this.pollerConfig = pollerConfig;\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(options) {\n        var _this = this;\n        var _a, stateProxy, updateState, isDone;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              stateProxy = createStateProxy();\n              if (this.state.isStarted) {\n                _context.next = 8;\n                break;\n              }\n              _context.t0 = Object;\n              _context.t1 = Object.assign({}, this.state);\n              _context.next = 6;\n              return initHttpOperation({\n                lro: this.lro,\n                stateProxy: stateProxy,\n                resourceLocationConfig: this.lroResourceLocationConfig,\n                processResult: this.processResult,\n                setErrorAsResult: this.setErrorAsResult\n              });\n            case 6:\n              _context.t2 = _context.sent;\n              this.state = _context.t0.assign.call(_context.t0, _context.t1, _context.t2);\n            case 8:\n              updateState = this.updateState;\n              isDone = this.isDone;\n              if (!(!this.state.isCompleted && this.state.error === undefined)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 13;\n              return pollHttpOperation({\n                lro: this.lro,\n                state: this.state,\n                stateProxy: stateProxy,\n                processResult: this.processResult,\n                updateState: updateState ? function (state, _ref) {\n                  var rawResponse = _ref.rawResponse;\n                  return updateState(state, rawResponse);\n                } : undefined,\n                isDone: isDone ? function (_ref2, state) {\n                  var flatResponse = _ref2.flatResponse;\n                  return isDone(flatResponse, state);\n                } : undefined,\n                options: options,\n                setDelay: function setDelay(intervalInMs) {\n                  _this.pollerConfig.intervalInMs = intervalInMs;\n                },\n                setErrorAsResult: this.setErrorAsResult\n              });\n            case 13:\n              (_a = options === null || options === void 0 ? void 0 : options.fireProgress) === null || _a === void 0 ? void 0 : _a.call(options, this.state);\n              return _context.abrupt(\"return\", this);\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function update(_x) {\n        return _update.apply(this, arguments);\n      }\n      return update;\n    }()\n  }, {\n    key: \"cancel\",\n    value: function () {\n      var _cancel = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n              return _context2.abrupt(\"return\", this);\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function cancel() {\n        return _cancel.apply(this, arguments);\n      }\n      return cancel;\n    }()\n    /**\n     * Serializes the Poller operation.\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return JSON.stringify({\n        state: this.state\n      });\n    }\n  }]);\n  return GenericPollOperation;\n}();","map":{"version":3,"names":["initHttpOperation","pollHttpOperation","logger","createStateProxy","initState","config","isStarted","setCanceled","state","isCancelled","setError","error","setResult","result","setRunning","setSucceeded","isCompleted","setFailed","getError","getResult","isCanceled","isFailed","isRunning","isSucceeded","Boolean","GenericPollOperation","lro","setErrorAsResult","lroResourceLocationConfig","processResult","updateState","isDone","_classCallCheck","_createClass","key","value","setPollerConfig","pollerConfig","_update","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","_this","_a","stateProxy","wrap","_callee$","_context","prev","next","t0","Object","t1","assign","resourceLocationConfig","t2","sent","call","undefined","_ref","rawResponse","_ref2","flatResponse","setDelay","intervalInMs","fireProgress","abrupt","stop","update","_x","apply","arguments","_cancel","_callee2","_callee2$","_context2","cancel","toString","JSON","stringify"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-lro\\src\\legacy\\lroEngine\\operation.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { LongRunningOperation, LroResourceLocationConfig, RawResponse } from \"../../http/models\";\nimport { PollOperation, PollOperationState } from \"../pollOperation\";\nimport { RestorableOperationState, StateProxy } from \"../../poller/models\";\nimport { initHttpOperation, pollHttpOperation } from \"../../http/operation\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { PollerConfig } from \"./models\";\nimport { logger } from \"../../logger\";\n\nconst createStateProxy: <TResult, TState extends PollOperationState<TResult>>() => StateProxy<\n  TState,\n  TResult\n> = () => ({\n  initState: (config) => ({ config, isStarted: true } as any),\n  setCanceled: (state) => (state.isCancelled = true),\n  setError: (state, error) => (state.error = error),\n  setResult: (state, result) => (state.result = result),\n  setRunning: (state) => (state.isStarted = true),\n  setSucceeded: (state) => (state.isCompleted = true),\n  setFailed: () => {\n    /** empty body */\n  },\n\n  getError: (state) => state.error,\n  getResult: (state) => state.result,\n  isCanceled: (state) => !!state.isCancelled,\n  isFailed: (state) => !!state.error,\n  isRunning: (state) => !!state.isStarted,\n  isSucceeded: (state) => Boolean(state.isCompleted && !state.isCancelled && !state.error),\n});\n\nexport class GenericPollOperation<TResult, TState extends PollOperationState<TResult>>\n  implements PollOperation<TState, TResult>\n{\n  private pollerConfig?: PollerConfig;\n\n  constructor(\n    public state: RestorableOperationState<TState>,\n    private lro: LongRunningOperation,\n    private setErrorAsResult: boolean,\n    private lroResourceLocationConfig?: LroResourceLocationConfig,\n    private processResult?: (result: unknown, state: TState) => TResult,\n    private updateState?: (state: TState, lastResponse: RawResponse) => void,\n    private isDone?: (lastResponse: TResult, state: TState) => boolean\n  ) {}\n\n  public setPollerConfig(pollerConfig: PollerConfig): void {\n    this.pollerConfig = pollerConfig;\n  }\n\n  async update(options?: {\n    abortSignal?: AbortSignalLike;\n    fireProgress?: (state: TState) => void;\n  }): Promise<PollOperation<TState, TResult>> {\n    const stateProxy = createStateProxy<TResult, TState>();\n    if (!this.state.isStarted) {\n      this.state = {\n        ...this.state,\n        ...(await initHttpOperation({\n          lro: this.lro,\n          stateProxy,\n          resourceLocationConfig: this.lroResourceLocationConfig,\n          processResult: this.processResult,\n          setErrorAsResult: this.setErrorAsResult,\n        })),\n      };\n    }\n    const updateState = this.updateState;\n    const isDone = this.isDone;\n\n    if (!this.state.isCompleted && this.state.error === undefined) {\n      await pollHttpOperation({\n        lro: this.lro,\n        state: this.state,\n        stateProxy,\n        processResult: this.processResult,\n        updateState: updateState\n          ? (state, { rawResponse }) => updateState(state, rawResponse)\n          : undefined,\n        isDone: isDone\n          ? ({ flatResponse }, state) => isDone(flatResponse as TResult, state)\n          : undefined,\n        options,\n        setDelay: (intervalInMs) => {\n          this.pollerConfig!.intervalInMs = intervalInMs;\n        },\n        setErrorAsResult: this.setErrorAsResult,\n      });\n    }\n    options?.fireProgress?.(this.state);\n    return this;\n  }\n\n  async cancel(): Promise<PollOperation<TState, TResult>> {\n    logger.error(\"`cancelOperation` is deprecated because it wasn't implemented\");\n    return this;\n  }\n\n  /**\n   * Serializes the Poller operation.\n   */\n  public toString(): string {\n    return JSON.stringify({\n      state: this.state,\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}