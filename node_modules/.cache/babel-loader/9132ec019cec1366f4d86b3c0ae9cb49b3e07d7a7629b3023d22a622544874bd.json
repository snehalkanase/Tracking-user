{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\nexport { WebResource } from \"./webResource\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpHeaders } from \"./httpHeaders\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { operationOptionsToRequestOptionsBase } from \"./operationOptions\";\nexport { ServiceClient, flattenResponse, createPipelineFromOptions } from \"./serviceClient\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { logPolicy } from \"./policies/logPolicy\";\nexport { BaseRequestPolicy, RequestPolicyOptions } from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport { userAgentPolicy, getDefaultUserAgentValue } from \"./policies/userAgentPolicy\";\nexport { deserializationPolicy, deserializeResponseBody } from \"./policies/deserializationPolicy\";\nexport { tracingPolicy } from \"./policies/tracingPolicy\";\nexport { MapperType, Serializer, serializeObject } from \"./serializer\";\nexport { stripRequest, stripResponse, executePromisesSequentially, generateUuid, encodeUri, promiseToCallback, promiseToServiceCallback, isValidUuid, applyMixins, isDuration } from \"./util/utils\";\nexport { isNode } from \"@azure/core-util\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { delay } from \"@azure/core-util\";\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\nexport { createSpanFunction } from \"./createSpanLegacy\";\n// Credentials\nexport { isTokenCredential } from \"@azure/core-auth\";\nexport { ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials } from \"./credentials/apiKeyCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY } from \"./util/serializer.common\";","map":{"version":3,"names":["WebResource","DefaultHttpClient","HttpHeaders","HttpPipelineLogLevel","RestError","operationOptionsToRequestOptionsBase","ServiceClient","flattenResponse","createPipelineFromOptions","QueryCollectionFormat","Constants","bearerTokenAuthenticationPolicy","logPolicy","BaseRequestPolicy","RequestPolicyOptions","generateClientRequestIdPolicy","exponentialRetryPolicy","RetryMode","systemErrorRetryPolicy","throttlingRetryPolicy","getDefaultProxySettings","proxyPolicy","redirectPolicy","keepAlivePolicy","disableResponseDecompressionPolicy","signingPolicy","userAgentPolicy","getDefaultUserAgentValue","deserializationPolicy","deserializeResponseBody","tracingPolicy","MapperType","Serializer","serializeObject","stripRequest","stripResponse","executePromisesSequentially","generateUuid","encodeUri","promiseToCallback","promiseToServiceCallback","isValidUuid","applyMixins","isDuration","isNode","URLBuilder","URLQuery","delay","createSpanFunction","isTokenCredential","ExpiringAccessTokenCache","AccessTokenRefresher","BasicAuthenticationCredentials","ApiKeyCredentials","TopicCredentials","parseXML","stringifyXML","XML_ATTRKEY","XML_CHARKEY"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\index.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/* eslint-disable-next-line @typescript-eslint/triple-slash-reference */\n/// <reference path=\"../dom-shim.d.ts\" />\n\nexport {\n  WebResource,\n  WebResourceLike,\n  HttpRequestBody,\n  RequestPrepareOptions,\n  HttpMethods,\n  ParameterValue,\n  RequestOptionsBase,\n  TransferProgressEvent,\n} from \"./webResource\";\nexport { CommonResponse, CommonRequestInit, CommonRequestInfo } from \"./nodeFetchHttpClient\";\nexport { DefaultHttpClient } from \"./defaultHttpClient\";\nexport { HttpClient } from \"./httpClient\";\nexport { HttpHeader, HttpHeaders, HttpHeadersLike, RawHttpHeaders } from \"./httpHeaders\";\nexport { HttpOperationResponse, HttpResponse, RestResponse } from \"./httpOperationResponse\";\nexport { HttpPipelineLogger } from \"./httpPipelineLogger\";\nexport { HttpPipelineLogLevel } from \"./httpPipelineLogLevel\";\nexport { RestError } from \"./restError\";\nexport { OperationArguments } from \"./operationArguments\";\nexport {\n  OperationOptions,\n  OperationRequestOptions,\n  operationOptionsToRequestOptionsBase,\n} from \"./operationOptions\";\nexport {\n  OperationParameter,\n  OperationQueryParameter,\n  OperationURLParameter,\n  ParameterPath,\n} from \"./operationParameter\";\nexport { OperationResponse } from \"./operationResponse\";\nexport { OperationSpec } from \"./operationSpec\";\nexport {\n  ServiceClient,\n  ServiceClientOptions,\n  flattenResponse,\n  createPipelineFromOptions,\n  ProxySettings,\n  ProxyOptions,\n} from \"./serviceClient\";\nexport { PipelineOptions, InternalPipelineOptions } from \"./pipelineOptions\";\nexport { QueryCollectionFormat } from \"./queryCollectionFormat\";\nexport { Constants } from \"./util/constants\";\nexport { bearerTokenAuthenticationPolicy } from \"./policies/bearerTokenAuthenticationPolicy\";\nexport { LogPolicyOptions, logPolicy } from \"./policies/logPolicy\";\nexport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RequestPolicyOptionsLike,\n} from \"./policies/requestPolicy\";\nexport { generateClientRequestIdPolicy } from \"./policies/generateClientRequestIdPolicy\";\nexport { exponentialRetryPolicy, RetryOptions, RetryMode } from \"./policies/exponentialRetryPolicy\";\nexport { systemErrorRetryPolicy } from \"./policies/systemErrorRetryPolicy\";\nexport { throttlingRetryPolicy } from \"./policies/throttlingRetryPolicy\";\nexport { getDefaultProxySettings, proxyPolicy } from \"./policies/proxyPolicy\";\nexport { redirectPolicy, RedirectOptions } from \"./policies/redirectPolicy\";\nexport { keepAlivePolicy, KeepAliveOptions } from \"./policies/keepAlivePolicy\";\nexport { disableResponseDecompressionPolicy } from \"./policies/disableResponseDecompressionPolicy\";\nexport { signingPolicy } from \"./policies/signingPolicy\";\nexport {\n  userAgentPolicy,\n  getDefaultUserAgentValue,\n  UserAgentOptions,\n  TelemetryInfo,\n} from \"./policies/userAgentPolicy\";\nexport {\n  deserializationPolicy,\n  DeserializationOptions,\n  deserializeResponseBody,\n  DeserializationContentTypes,\n} from \"./policies/deserializationPolicy\";\nexport { tracingPolicy, TracingPolicyOptions } from \"./policies/tracingPolicy\";\nexport {\n  MapperType,\n  SimpleMapperType,\n  CompositeMapperType,\n  DictionaryMapperType,\n  SequenceMapperType,\n  EnumMapperType,\n  Mapper,\n  BaseMapper,\n  CompositeMapper,\n  SequenceMapper,\n  DictionaryMapper,\n  EnumMapper,\n  MapperConstraints,\n  PolymorphicDiscriminator,\n  Serializer,\n  UrlParameterValue,\n  serializeObject,\n} from \"./serializer\";\nexport {\n  stripRequest,\n  stripResponse,\n  executePromisesSequentially,\n  generateUuid,\n  encodeUri,\n  ServiceCallback,\n  promiseToCallback,\n  promiseToServiceCallback,\n  isValidUuid,\n  applyMixins,\n  isDuration,\n} from \"./util/utils\";\nexport { isNode } from \"@azure/core-util\";\nexport { URLBuilder, URLQuery } from \"./url\";\nexport { AbortSignalLike } from \"@azure/abort-controller\";\nexport { delay } from \"@azure/core-util\";\n// legacy exports. Use core-tracing instead (and remove on next major version update of core-http).\nexport { createSpanFunction, SpanConfig } from \"./createSpanLegacy\";\n\n// Credentials\nexport { TokenCredential, GetTokenOptions, AccessToken, isTokenCredential } from \"@azure/core-auth\";\nexport { AccessTokenCache, ExpiringAccessTokenCache } from \"./credentials/accessTokenCache\";\nexport { AccessTokenRefresher } from \"./credentials/accessTokenRefresher\";\nexport { BasicAuthenticationCredentials } from \"./credentials/basicAuthenticationCredentials\";\nexport { ApiKeyCredentials, ApiKeyCredentialOptions } from \"./credentials/apiKeyCredentials\";\nexport { ServiceClientCredentials } from \"./credentials/serviceClientCredentials\";\nexport { TopicCredentials } from \"./credentials/topicCredentials\";\nexport { Authenticator } from \"./credentials/credentials\";\n\nexport { parseXML, stringifyXML } from \"./util/xml\";\nexport { XML_ATTRKEY, XML_CHARKEY, SerializerOptions } from \"./util/serializer.common\";\n"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA,SACEA,WAAW,QAQN,eAAe;AAEtB,SAASC,iBAAiB,QAAQ,qBAAqB;AAEvD,SAAqBC,WAAW,QAAyC,eAAe;AAGxF,SAASC,oBAAoB,QAAQ,wBAAwB;AAC7D,SAASC,SAAS,QAAQ,aAAa;AAEvC,SAGEC,oCAAoC,QAC/B,oBAAoB;AAS3B,SACEC,aAAa,EAEbC,eAAe,EACfC,yBAAyB,QAGpB,iBAAiB;AAExB,SAASC,qBAAqB,QAAQ,yBAAyB;AAC/D,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,+BAA+B,QAAQ,4CAA4C;AAC5F,SAA2BC,SAAS,QAAQ,sBAAsB;AAClE,SACEC,iBAAiB,EAGjBC,oBAAoB,QAEf,0BAA0B;AACjC,SAASC,6BAA6B,QAAQ,0CAA0C;AACxF,SAASC,sBAAsB,EAAgBC,SAAS,QAAQ,mCAAmC;AACnG,SAASC,sBAAsB,QAAQ,mCAAmC;AAC1E,SAASC,qBAAqB,QAAQ,kCAAkC;AACxE,SAASC,uBAAuB,EAAEC,WAAW,QAAQ,wBAAwB;AAC7E,SAASC,cAAc,QAAyB,2BAA2B;AAC3E,SAASC,eAAe,QAA0B,4BAA4B;AAC9E,SAASC,kCAAkC,QAAQ,+CAA+C;AAClG,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SACEC,eAAe,EACfC,wBAAwB,QAGnB,4BAA4B;AACnC,SACEC,qBAAqB,EAErBC,uBAAuB,QAElB,kCAAkC;AACzC,SAASC,aAAa,QAA8B,0BAA0B;AAC9E,SACEC,UAAU,EAcVC,UAAU,EAEVC,eAAe,QACV,cAAc;AACrB,SACEC,YAAY,EACZC,aAAa,EACbC,2BAA2B,EAC3BC,YAAY,EACZC,SAAS,EAETC,iBAAiB,EACjBC,wBAAwB,EACxBC,WAAW,EACXC,WAAW,EACXC,UAAU,QACL,cAAc;AACrB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAE5C,SAASC,KAAK,QAAQ,kBAAkB;AACxC;AACA,SAASC,kBAAkB,QAAoB,oBAAoB;AAEnE;AACA,SAAwDC,iBAAiB,QAAQ,kBAAkB;AACnG,SAA2BC,wBAAwB,QAAQ,gCAAgC;AAC3F,SAASC,oBAAoB,QAAQ,oCAAoC;AACzE,SAASC,8BAA8B,QAAQ,8CAA8C;AAC7F,SAASC,iBAAiB,QAAiC,iCAAiC;AAE5F,SAASC,gBAAgB,QAAQ,gCAAgC;AAGjE,SAASC,QAAQ,EAAEC,YAAY,QAAQ,YAAY;AACnD,SAASC,WAAW,EAAEC,WAAW,QAA2B,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}