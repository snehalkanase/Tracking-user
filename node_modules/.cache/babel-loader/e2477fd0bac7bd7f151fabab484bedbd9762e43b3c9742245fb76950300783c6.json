{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { createSpanFunction } from \"@azure/core-tracing\";\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.Blob\",\n  namespace: \"Microsoft.Storage\"\n});\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(options) {\n  var _a, _b;\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (_a = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _a === void 0 ? void 0 : _a.spanOptions,\n    tracingContext: (_b = options === null || options === void 0 ? void 0 : options.tracingOptions) === null || _b === void 0 ? void 0 : _b.tracingContext\n  };\n}","map":{"version":3,"names":["createSpanFunction","createSpan","packagePrefix","namespace","convertTracingToRequestOptionsBase","options","spanOptions","_a","tracingOptions","tracingContext","_b"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\utils\\tracing.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestOptionsBase } from \"@azure/core-http\";\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.Blob\",\n  namespace: \"Microsoft.Storage\",\n});\n\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(\n  options?: OperationOptions\n): Pick<RequestOptionsBase, \"spanOptions\" | \"tracingContext\"> {\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (options?.tracingOptions as any)?.spanOptions,\n    tracingContext: options?.tracingOptions?.tracingContext,\n  };\n}\n"],"mappings":"AAAA;AACA;AAGA,SAASA,kBAAkB,QAAQ,qBAAqB;AAExD;;;;AAIA,OAAO,MAAMC,UAAU,GAAGD,kBAAkB,CAAC;EAC3CE,aAAa,EAAE,oBAAoB;EACnCC,SAAS,EAAE;CACZ,CAAC;AAEF;;;;;;;AAOA,OAAM,SAAUC,kCAAkCA,CAChDC,OAA0B;;EAE1B,OAAO;IACL;IACAC,WAAW,EAAE,CAAAC,EAAA,GAACF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,cAAsB,cAAAD,EAAA,uBAAAA,EAAA,CAAED,WAAW;IAC1DG,cAAc,EAAE,CAAAC,EAAA,GAAAL,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEG,cAAc,cAAAE,EAAA,uBAAAA,EAAA,CAAED;GAC1C;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}