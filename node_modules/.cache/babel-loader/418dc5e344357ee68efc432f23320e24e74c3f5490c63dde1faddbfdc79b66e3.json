{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nexport var DefaultKeepAliveOptions = {\n  enable: true\n};\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nexport function keepAlivePolicy(keepAliveOptions) {\n  return {\n    create: function create(nextPolicy, options) {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    }\n  };\n}\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport var KeepAlivePolicy = /*#__PURE__*/function (_BaseRequestPolicy) {\n  _inherits(KeepAlivePolicy, _BaseRequestPolicy);\n  var _super = _createSuper(KeepAlivePolicy);\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  function KeepAlivePolicy(nextPolicy, options, keepAliveOptions) {\n    var _this;\n    _classCallCheck(this, KeepAlivePolicy);\n    _this = _super.call(this, nextPolicy, options);\n    _this.keepAliveOptions = keepAliveOptions;\n    return _this;\n  }\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  _createClass(KeepAlivePolicy, [{\n    key: \"sendRequest\",\n    value: function () {\n      var _sendRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              request.keepAlive = this.keepAliveOptions.enable;\n              return _context.abrupt(\"return\", this._nextPolicy.sendRequest(request));\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function sendRequest(_x) {\n        return _sendRequest.apply(this, arguments);\n      }\n      return sendRequest;\n    }()\n  }]);\n  return KeepAlivePolicy;\n}(BaseRequestPolicy);","map":{"version":3,"names":["BaseRequestPolicy","DefaultKeepAliveOptions","enable","keepAlivePolicy","keepAliveOptions","create","nextPolicy","options","KeepAlivePolicy","_BaseRequestPolicy","_inherits","_super","_createSuper","_this","_classCallCheck","call","_createClass","key","value","_sendRequest","_asyncToGenerator","_regeneratorRuntime","mark","_callee","request","wrap","_callee$","_context","prev","next","keepAlive","abrupt","_nextPolicy","sendRequest","stop","_x","apply","arguments"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\policies\\keepAlivePolicy.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { WebResourceLike } from \"../webResource\";\n\n/**\n * Options for how HTTP connections should be maintained for future\n * requests.\n */\nexport interface KeepAliveOptions {\n  /**\n   * When true, connections will be kept alive for multiple requests.\n   * Defaults to true.\n   */\n  enable: boolean;\n}\n\n/**\n * By default, HTTP connections are maintained for future requests.\n */\nexport const DefaultKeepAliveOptions: KeepAliveOptions = {\n  enable: true,\n};\n\n/**\n * Creates a policy that controls whether HTTP connections are maintained on future requests.\n * @param keepAliveOptions - Keep alive options. By default, HTTP connections are maintained for future requests.\n * @returns An instance of the {@link KeepAlivePolicy}\n */\nexport function keepAlivePolicy(keepAliveOptions?: KeepAliveOptions): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions) => {\n      return new KeepAlivePolicy(nextPolicy, options, keepAliveOptions || DefaultKeepAliveOptions);\n    },\n  };\n}\n\n/**\n * KeepAlivePolicy is a policy used to control keep alive settings for every request.\n */\nexport class KeepAlivePolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of KeepAlivePolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param keepAliveOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    private readonly keepAliveOptions: KeepAliveOptions\n  ) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   * @returns\n   */\n  public async sendRequest(request: WebResourceLike): Promise<HttpOperationResponse> {\n    request.keepAlive = this.keepAliveOptions.enable;\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n"],"mappings":";;;;;;AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAgBxB;;;AAGA,OAAO,IAAMC,uBAAuB,GAAqB;EACvDC,MAAM,EAAE;CACT;AAED;;;;;AAKA,OAAM,SAAUC,eAAeA,CAACC,gBAAmC;EACjE,OAAO;IACLC,MAAM,EAAE,SAAAA,OAACC,UAAyB,EAAEC,OAA6B,EAAI;MACnE,OAAO,IAAIC,eAAe,CAACF,UAAU,EAAEC,OAAO,EAAEH,gBAAgB,IAAIH,uBAAuB,CAAC;IAC9F;GACD;AACH;AAEA;;;AAGA,WAAaO,eAAgB,0BAAAC,kBAAA;EAAAC,SAAA,CAAAF,eAAA,EAAAC,kBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,eAAA;EAC3B;;;;;;;EAOA,SAAAA,gBACEF,UAAyB,EACzBC,OAA6B,EACZH,gBAAkC;IAAA,IAAAS,KAAA;IAAAC,eAAA,OAAAN,eAAA;IAEnDK,KAAA,GAAAF,MAAA,CAAAI,IAAA,OAAMT,UAAU,EAAEC,OAAO;IAFRM,KAAA,CAAAT,gBAAgB,GAAhBA,gBAAgB;IAAkB,OAAAS,KAAA;EAGrD;EAEA;;;;;;EAAAG,YAAA,CAAAR,eAAA;IAAAS,GAAA;IAAAC,KAAA;MAAA,IAAAC,YAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAMO,SAAAC,QAAkBC,OAAwB;QAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAC/CL,OAAO,CAACM,SAAS,GAAG,IAAI,CAAC1B,gBAAgB,CAACF,MAAM;cAAC,OAAAyB,QAAA,CAAAI,MAAA,WAC1C,IAAI,CAACC,WAAW,CAACC,WAAW,CAACT,OAAO,CAAC;YAAA;YAAA;cAAA,OAAAG,QAAA,CAAAO,IAAA;UAAA;QAAA,GAAAX,OAAA;MAAA,CAC7C;MAAA,SAAAU,YAAAE,EAAA;QAAA,OAAAhB,YAAA,CAAAiB,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAAJ,WAAA;IAAA;EAAA;EAAA,OAAAzB,eAAA;AAAA,EAzBkCR,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}