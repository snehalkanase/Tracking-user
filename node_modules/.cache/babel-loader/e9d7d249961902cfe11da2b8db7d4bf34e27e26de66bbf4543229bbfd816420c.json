{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined(thing) {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * Note: The properties may be inherited.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n * @internal\n */\nexport function isObjectWithProperties(thing, properties) {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * Note: The property may be inherited.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n * @internal\n */\nfunction objectHasProperty(thing, property) {\n  return typeof thing === \"object\" && property in thing;\n}","map":{"version":3,"names":["isDefined","thing","isObjectWithProperties","properties","property","objectHasProperty"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-auth\\src\\typeguards.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Helper TypeGuard that checks if something is defined or not.\n * @param thing - Anything\n * @internal\n */\nfunction isDefined<T>(thing: T | undefined | null): thing is T {\n  return typeof thing !== \"undefined\" && thing !== null;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified properties.\n * Note: The properties may be inherited.\n * @param thing - Anything.\n * @param properties - The name of the properties that should appear in the object.\n * @internal\n */\nexport function isObjectWithProperties<Thing, PropertyName extends string>(\n  thing: Thing,\n  properties: PropertyName[]\n): thing is Thing & Record<PropertyName, unknown> {\n  if (!isDefined(thing) || typeof thing !== \"object\") {\n    return false;\n  }\n\n  for (const property of properties) {\n    if (!objectHasProperty(thing, property)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Helper TypeGuard that checks if the input is an object with the specified property.\n * Note: The property may be inherited.\n * @param thing - Any object.\n * @param property - The name of the property that should appear in the object.\n * @internal\n */\nfunction objectHasProperty<Thing, PropertyName extends string>(\n  thing: Thing,\n  property: PropertyName\n): thing is Thing & Record<PropertyName, unknown> {\n  return typeof thing === \"object\" && property in (thing as Record<string, unknown>);\n}\n"],"mappings":"AAAA;AACA;AAEA;;;;;AAKA,SAASA,SAASA,CAAIC,KAA2B;EAC/C,OAAO,OAAOA,KAAK,KAAK,WAAW,IAAIA,KAAK,KAAK,IAAI;AACvD;AAEA;;;;;;;AAOA,OAAM,SAAUC,sBAAsBA,CACpCD,KAAY,EACZE,UAA0B;EAE1B,IAAI,CAACH,SAAS,CAACC,KAAK,CAAC,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;IAClD,OAAO,KAAK;;EAGd,KAAK,MAAMG,QAAQ,IAAID,UAAU,EAAE;IACjC,IAAI,CAACE,iBAAiB,CAACJ,KAAK,EAAEG,QAAQ,CAAC,EAAE;MACvC,OAAO,KAAK;;;EAIhB,OAAO,IAAI;AACb;AAEA;;;;;;;AAOA,SAASC,iBAAiBA,CACxBJ,KAAY,EACZG,QAAsB;EAEtB,OAAO,OAAOH,KAAK,KAAK,QAAQ,IAAIG,QAAQ,IAAKH,KAAiC;AACpF"},"metadata":{},"sourceType":"module","externalDependencies":[]}