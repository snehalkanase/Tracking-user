{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"./constants\";\nimport { XML_ATTRKEY } from \"./serializer.common\";\nimport { v4 as uuidv4 } from \"uuid\";\nconst validUuidRegex = /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck) {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nexport function encodeUri(uri) {\n  return encodeURIComponent(uri).replace(/!/g, \"%21\").replace(/\"/g, \"%27\").replace(/\\(/g, \"%28\").replace(/\\)/g, \"%29\").replace(/\\*/g, \"%2A\");\n}\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nexport function stripResponse(response) {\n  const strippedResponse = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nexport function stripRequest(request) {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid) {\n  return validUuidRegex.test(uuid);\n}\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUuid() {\n  return uuidv4();\n}\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(promiseFactories, kickstart) {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach(promiseFactory => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function promiseToCallback(promise) {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return cb => {\n    promise.then(data => {\n      // eslint-disable-next-line promise/no-callback-in-promise\n      return cb(undefined, data);\n    }).catch(err => {\n      // eslint-disable-next-line promise/no-callback-in-promise\n      cb(err);\n    });\n  };\n}\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback(promise) {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return cb => {\n    promise.then(data => {\n      return process.nextTick(cb, undefined, data.parsedBody, data.request, data);\n    }).catch(err => {\n      process.nextTick(cb, err);\n    });\n  };\n}\nexport function prepareXMLRootList(obj, elementName, xmlNamespaceKey, xmlNamespace) {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return {\n      [elementName]: obj\n    };\n  }\n  const result = {\n    [elementName]: obj\n  };\n  result[XML_ATTRKEY] = {\n    [xmlNamespaceKey]: xmlNamespace\n  };\n  return result;\n}\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtorParam, sourceCtors) {\n  const castTargetCtorParam = targetCtorParam;\n  sourceCtors.forEach(sourceCtor => {\n    Object.getOwnPropertyNames(sourceCtor.prototype).forEach(name => {\n      castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n    });\n  });\n}\nconst validateISODuration = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nexport function isDuration(value) {\n  return validateISODuration.test(value);\n}\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(value, searchValue, replaceValue) {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value) {\n  return typeof value !== \"object\" && typeof value !== \"function\" || value === null;\n}\nexport function getEnvironmentValue(name) {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input) {\n  return typeof input === \"object\" && input !== null && !Array.isArray(input) && !(input instanceof RegExp) && !(input instanceof Date);\n}","map":{"version":3,"names":["Constants","XML_ATTRKEY","v4","uuidv4","validUuidRegex","urlIsHTTPS","urlToCheck","protocol","toLowerCase","HTTPS","encodeUri","uri","encodeURIComponent","replace","stripResponse","response","strippedResponse","body","bodyAsText","headers","status","stripRequest","request","strippedRequest","clone","remove","isValidUuid","uuid","test","generateUuid","executePromisesSequentially","promiseFactories","kickstart","result","Promise","resolve","forEach","promiseFactory","then","promiseToCallback","promise","Error","cb","data","undefined","catch","err","promiseToServiceCallback","process","nextTick","parsedBody","prepareXMLRootList","obj","elementName","xmlNamespaceKey","xmlNamespace","Array","isArray","applyMixins","targetCtorParam","sourceCtors","castTargetCtorParam","sourceCtor","Object","getOwnPropertyNames","prototype","name","validateISODuration","isDuration","value","replaceAll","searchValue","replaceValue","split","join","isPrimitiveType","getEnvironmentValue","env","isObject","input","RegExp","Date"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\util\\utils.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Constants } from \"./constants\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { RestError } from \"../restError\";\nimport { WebResourceLike } from \"../webResource\";\nimport { XML_ATTRKEY } from \"./serializer.common\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst validUuidRegex =\n  /^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$/i;\n\n/**\n * Checks if a parsed URL is HTTPS\n *\n * @param urlToCheck - The url to check\n * @returns True if the URL is HTTPS; false otherwise.\n */\nexport function urlIsHTTPS(urlToCheck: { protocol: string }): boolean {\n  return urlToCheck.protocol.toLowerCase() === Constants.HTTPS;\n}\n\n/**\n * Encodes an URI.\n *\n * @param uri - The URI to be encoded.\n * @returns The encoded URI.\n */\nexport function encodeUri(uri: string): string {\n  return encodeURIComponent(uri)\n    .replace(/!/g, \"%21\")\n    .replace(/\"/g, \"%27\")\n    .replace(/\\(/g, \"%28\")\n    .replace(/\\)/g, \"%29\")\n    .replace(/\\*/g, \"%2A\");\n}\n\n/**\n * Returns a stripped version of the Http Response which only contains body,\n * headers and the status.\n *\n * @param response - The Http Response\n * @returns The stripped version of Http Response.\n */\nexport function stripResponse(response: HttpOperationResponse): any {\n  const strippedResponse: any = {};\n  strippedResponse.body = response.bodyAsText;\n  strippedResponse.headers = response.headers;\n  strippedResponse.status = response.status;\n  return strippedResponse;\n}\n\n/**\n * Returns a stripped version of the Http Request that does not contain the\n * Authorization header.\n *\n * @param request - The Http Request object\n * @returns The stripped version of Http Request.\n */\nexport function stripRequest(request: WebResourceLike): WebResourceLike {\n  const strippedRequest = request.clone();\n  if (strippedRequest.headers) {\n    strippedRequest.headers.remove(\"authorization\");\n  }\n  return strippedRequest;\n}\n\n/**\n * Validates the given uuid as a string\n *\n * @param uuid - The uuid as a string that needs to be validated\n * @returns True if the uuid is valid; false otherwise.\n */\nexport function isValidUuid(uuid: string): boolean {\n  return validUuidRegex.test(uuid);\n}\n\n/**\n * Generated UUID\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUuid(): string {\n  return uuidv4();\n}\n\n/**\n * Executes an array of promises sequentially. Inspiration of this method is here:\n * https://pouchdb.com/2015/05/18/we-have-a-problem-with-promises.html. An awesome blog on promises!\n *\n * @param promiseFactories - An array of promise factories(A function that return a promise)\n * @param kickstart - Input to the first promise that is used to kickstart the promise chain.\n * If not provided then the promise chain starts with undefined.\n * @returns A chain of resolved or rejected promises\n */\nexport function executePromisesSequentially(\n  promiseFactories: Array<any>,\n  kickstart: unknown\n): Promise<any> {\n  let result = Promise.resolve(kickstart);\n  promiseFactories.forEach((promiseFactory) => {\n    result = result.then(promiseFactory);\n  });\n  return result;\n}\n\n/**\n * Service callback that is returned for REST requests initiated by the service client.\n */\nexport interface ServiceCallback<TResult> {\n  /**\n   * A method that will be invoked as a callback to a service function.\n   * @param err - The error occurred if any, while executing the request; otherwise null.\n   * @param result - The deserialized response body if an error did not occur.\n   * @param request - The raw/actual request sent to the server if an error did not occur.\n   * @param response - The raw/actual response from the server if an error did not occur.\n   */\n  (\n    err: Error | RestError | null,\n    result?: TResult,\n    request?: WebResourceLike,\n    response?: HttpOperationResponse\n  ): void;\n}\n\n/**\n * Converts a Promise to a callback.\n * @param promise - The Promise to be converted to a callback\n * @returns A function that takes the callback `(cb: Function) => void`\n * @deprecated generated code should instead depend on responseToBody\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function promiseToCallback(promise: Promise<any>): (cb: Function) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  return (cb: Function): void => {\n    promise\n      .then((data: any) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        return cb(undefined, data);\n      })\n      .catch((err: Error) => {\n        // eslint-disable-next-line promise/no-callback-in-promise\n        cb(err);\n      });\n  };\n}\n\n/**\n * Converts a Promise to a service callback.\n * @param promise - The Promise of HttpOperationResponse to be converted to a service callback\n * @returns A function that takes the service callback (cb: ServiceCallback<T>): void\n */\nexport function promiseToServiceCallback<T>(\n  promise: Promise<HttpOperationResponse>\n): (cb: ServiceCallback<T>) => void {\n  if (typeof promise.then !== \"function\") {\n    throw new Error(\"The provided input is not a Promise.\");\n  }\n  return (cb: ServiceCallback<T>): void => {\n    promise\n      .then((data: HttpOperationResponse) => {\n        return process.nextTick(cb, undefined, data.parsedBody as T, data.request, data);\n      })\n      .catch((err: Error) => {\n        process.nextTick(cb, err);\n      });\n  };\n}\n\nexport function prepareXMLRootList(\n  obj: unknown,\n  elementName: string,\n  xmlNamespaceKey?: string,\n  xmlNamespace?: string\n): { [s: string]: any } {\n  if (!Array.isArray(obj)) {\n    obj = [obj];\n  }\n\n  if (!xmlNamespaceKey || !xmlNamespace) {\n    return { [elementName]: obj };\n  }\n\n  const result = { [elementName]: obj };\n  result[XML_ATTRKEY] = { [xmlNamespaceKey]: xmlNamespace };\n  return result;\n}\n\n/**\n * Applies the properties on the prototype of sourceCtors to the prototype of targetCtor\n * @param targetCtor - The target object on which the properties need to be applied.\n * @param sourceCtors - An array of source objects from which the properties need to be taken.\n */\nexport function applyMixins(targetCtorParam: unknown, sourceCtors: any[]): void {\n  const castTargetCtorParam = targetCtorParam as {\n    prototype: Record<string, unknown>;\n  };\n  sourceCtors.forEach((sourceCtor) => {\n    Object.getOwnPropertyNames(sourceCtor.prototype).forEach((name) => {\n      castTargetCtorParam.prototype[name] = sourceCtor.prototype[name];\n    });\n  });\n}\n\nconst validateISODuration =\n  /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n/**\n * Indicates whether the given string is in ISO 8601 format.\n * @param value - The value to be validated for ISO 8601 duration format.\n * @returns `true` if valid, `false` otherwise.\n */\nexport function isDuration(value: string): boolean {\n  return validateISODuration.test(value);\n}\n\n/**\n * Replace all of the instances of searchValue in value with the provided replaceValue.\n * @param value - The value to search and replace in.\n * @param searchValue - The value to search for in the value argument.\n * @param replaceValue - The value to replace searchValue with in the value argument.\n * @returns The value where each instance of searchValue was replaced with replacedValue.\n */\nexport function replaceAll(\n  value: string | undefined,\n  searchValue: string,\n  replaceValue: string\n): string | undefined {\n  return !value || !searchValue ? value : value.split(searchValue).join(replaceValue || \"\");\n}\n\n/**\n * Determines whether the given entity is a basic/primitive type\n * (string, number, boolean, null, undefined).\n * @param value - Any entity\n * @returns true is it is primitive type, false otherwise.\n */\nexport function isPrimitiveType(value: unknown): boolean {\n  return (typeof value !== \"object\" && typeof value !== \"function\") || value === null;\n}\n\nexport function getEnvironmentValue(name: string): string | undefined {\n  if (process.env[name]) {\n    return process.env[name];\n  } else if (process.env[name.toLowerCase()]) {\n    return process.env[name.toLowerCase()];\n  }\n  return undefined;\n}\n\n/**\n * @internal\n */\nexport type UnknownObject = { [s: string]: unknown };\n\n/**\n * @internal\n * @returns true when input is an object type that is not null, Array, RegExp, or Date.\n */\nexport function isObject(input: unknown): input is UnknownObject {\n  return (\n    typeof input === \"object\" &&\n    input !== null &&\n    !Array.isArray(input) &&\n    !(input instanceof RegExp) &&\n    !(input instanceof Date)\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}