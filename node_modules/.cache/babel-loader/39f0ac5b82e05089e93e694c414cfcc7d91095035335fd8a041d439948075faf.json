{"ast":null,"code":"import _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\n/**\n * Protocols for generated SAS.\n */\nexport var SASProtocol;\n(function (SASProtocol) {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  SASProtocol[\"Https\"] = \"https\";\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  SASProtocol[\"HttpsAndHttp\"] = \"https,http\";\n})(SASProtocol || (SASProtocol = {}));\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport var SASQueryParameters = /*#__PURE__*/function () {\n  function SASQueryParameters(version, signature, permissionsOrOptions, services, resourceTypes, protocol, startsOn, expiresOn, ipRange, identifier, resource, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, userDelegationKey, preauthorizedAgentObjectId, correlationId, encryptionScope) {\n    _classCallCheck(this, SASQueryParameters);\n    this.version = version;\n    this.signature = signature;\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  _createClass(SASQueryParameters, [{\n    key: \"ipRange\",\n    get: function get() {\n      if (this.ipRangeInner) {\n        return {\n          end: this.ipRangeInner.end,\n          start: this.ipRangeInner.start\n        };\n      }\n      return undefined;\n    }\n    /**\n     * Encodes all SAS query parameters into a string that can be appended to a URL.\n     *\n     */\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var params = [\"sv\", \"ss\", \"srt\", \"spr\", \"st\", \"se\", \"sip\", \"si\", \"ses\", \"skoid\", \"sktid\", \"skt\", \"ske\", \"sks\", \"skv\", \"sr\", \"sp\", \"sig\", \"rscc\", \"rscd\", \"rsce\", \"rscl\", \"rsct\", \"saoid\", \"scid\"];\n      var queries = [];\n      for (var _i = 0, _params = params; _i < _params.length; _i++) {\n        var param = _params[_i];\n        switch (param) {\n          case \"sv\":\n            this.tryAppendQueryParameter(queries, param, this.version);\n            break;\n          case \"ss\":\n            this.tryAppendQueryParameter(queries, param, this.services);\n            break;\n          case \"srt\":\n            this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n            break;\n          case \"spr\":\n            this.tryAppendQueryParameter(queries, param, this.protocol);\n            break;\n          case \"st\":\n            this.tryAppendQueryParameter(queries, param, this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined);\n            break;\n          case \"se\":\n            this.tryAppendQueryParameter(queries, param, this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined);\n            break;\n          case \"sip\":\n            this.tryAppendQueryParameter(queries, param, this.ipRange ? ipRangeToString(this.ipRange) : undefined);\n            break;\n          case \"si\":\n            this.tryAppendQueryParameter(queries, param, this.identifier);\n            break;\n          case \"ses\":\n            this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n            break;\n          case \"skoid\":\n            // Signed object ID\n            this.tryAppendQueryParameter(queries, param, this.signedOid);\n            break;\n          case \"sktid\":\n            // Signed tenant ID\n            this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n            break;\n          case \"skt\":\n            // Signed key start time\n            this.tryAppendQueryParameter(queries, param, this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined);\n            break;\n          case \"ske\":\n            // Signed key expiry time\n            this.tryAppendQueryParameter(queries, param, this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined);\n            break;\n          case \"sks\":\n            // Signed key service\n            this.tryAppendQueryParameter(queries, param, this.signedService);\n            break;\n          case \"skv\":\n            // Signed key version\n            this.tryAppendQueryParameter(queries, param, this.signedVersion);\n            break;\n          case \"sr\":\n            this.tryAppendQueryParameter(queries, param, this.resource);\n            break;\n          case \"sp\":\n            this.tryAppendQueryParameter(queries, param, this.permissions);\n            break;\n          case \"sig\":\n            this.tryAppendQueryParameter(queries, param, this.signature);\n            break;\n          case \"rscc\":\n            this.tryAppendQueryParameter(queries, param, this.cacheControl);\n            break;\n          case \"rscd\":\n            this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n            break;\n          case \"rsce\":\n            this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n            break;\n          case \"rscl\":\n            this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n            break;\n          case \"rsct\":\n            this.tryAppendQueryParameter(queries, param, this.contentType);\n            break;\n          case \"saoid\":\n            this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n            break;\n          case \"scid\":\n            this.tryAppendQueryParameter(queries, param, this.correlationId);\n            break;\n        }\n      }\n      return queries.join(\"&\");\n    }\n    /**\n     * A private helper method used to filter and append query key/value pairs into an array.\n     *\n     * @param queries -\n     * @param key -\n     * @param value -\n     */\n  }, {\n    key: \"tryAppendQueryParameter\",\n    value: function tryAppendQueryParameter(queries, key, value) {\n      if (!value) {\n        return;\n      }\n      key = encodeURIComponent(key);\n      value = encodeURIComponent(value);\n      if (key.length > 0 && value.length > 0) {\n        queries.push(\"\".concat(key, \"=\").concat(value));\n      }\n    }\n  }]);\n  return SASQueryParameters;\n}();","map":{"version":3,"names":["ipRangeToString","truncatedISO8061Date","SASProtocol","SASQueryParameters","version","signature","permissionsOrOptions","services","resourceTypes","protocol","startsOn","expiresOn","ipRange","identifier","resource","cacheControl","contentDisposition","contentEncoding","contentLanguage","contentType","userDelegationKey","preauthorizedAgentObjectId","correlationId","encryptionScope","_classCallCheck","undefined","permissions","ipRangeInner","signedOid","signedObjectId","signedTenantId","signedStartsOn","signedExpiresOn","signedService","signedVersion","_createClass","key","get","end","start","value","toString","params","queries","_i","_params","length","param","tryAppendQueryParameter","join","encodeURIComponent","push","concat"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\sas\\SASQueryParameters.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"../utils/utils.common\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Options to construct {@link SASQueryParameters}.\n */\nexport interface SASQueryParametersOptions {\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  permissions?: string;\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  services?: string;\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  resourceTypes?: string;\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  protocol?: SASProtocol;\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  startsOn?: Date;\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  expiresOn?: Date;\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  encryptionScope?: string;\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  resource?: string;\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  cacheControl?: string;\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  contentDisposition?: string;\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  contentEncoding?: string;\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  contentLanguage?: string;\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  contentType?: string;\n  /**\n   * User delegation key properties.\n   */\n  userDelegationKey?: UserDelegationKey;\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This cannot be used in conjuction with {@link signedUnauthorizedUserObjectId}.\n   * This is only used for User Delegation SAS.\n   */\n  preauthorizedAgentObjectId?: string;\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  correlationId?: string;\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. Encryption scope to use when sending requests authorized with this SAS URI.\n   */\n  public readonly encryptionScope?: string;\n\n  /**\n   * Optional. Specifies which resources are accessible via the SAS (only for {@link BlobSASSignatureValues}).\n   * @see https://docs.microsoft.com/rest/api/storageservices/create-service-sas#specifying-the-signed-resource-blob-service-only\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   */\n  private readonly signedTenantId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Authorized AAD Object ID in GUID format. The AAD Object ID of a user authorized by the owner of the User Delegation Key\n   * to perform the action granted by the SAS. The Azure Storage service will ensure that the owner of the user delegation key\n   * has the required permissions before granting access but no additional permission check for the user specified in\n   * this value will be performed. This is only used for User Delegation SAS.\n   */\n  public readonly preauthorizedAgentObjectId?: string;\n\n  /**\n   * A GUID value that will be logged in the storage diagnostic logs and can be used to correlate SAS generation with storage resource access.\n   * This is only used for User Delegation SAS.\n   */\n  public readonly correlationId?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   * @param userDelegationKey - Representing the user delegation key properties\n   * @param preauthorizedAgentObjectId - Representing the authorized AAD Object ID (only for User Delegation SAS)\n   * @param correlationId - Representing the correlation ID (only for User Delegation SAS)\n   * @param encryptionScope -\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string\n  );\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param options - Optional. Options to construct the SASQueryParameters.\n   */\n  constructor(version: string, signature: string, options?: SASQueryParametersOptions);\n\n  constructor(\n    version: string,\n    signature: string,\n    permissionsOrOptions?: string | SASQueryParametersOptions,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey,\n    preauthorizedAgentObjectId?: string,\n    correlationId?: string,\n    encryptionScope?: string\n  ) {\n    this.version = version;\n    this.signature = signature;\n\n    if (permissionsOrOptions !== undefined && typeof permissionsOrOptions !== \"string\") {\n      // SASQueryParametersOptions\n      this.permissions = permissionsOrOptions.permissions;\n      this.services = permissionsOrOptions.services;\n      this.resourceTypes = permissionsOrOptions.resourceTypes;\n      this.protocol = permissionsOrOptions.protocol;\n      this.startsOn = permissionsOrOptions.startsOn;\n      this.expiresOn = permissionsOrOptions.expiresOn;\n      this.ipRangeInner = permissionsOrOptions.ipRange;\n      this.identifier = permissionsOrOptions.identifier;\n      this.encryptionScope = permissionsOrOptions.encryptionScope;\n      this.resource = permissionsOrOptions.resource;\n      this.cacheControl = permissionsOrOptions.cacheControl;\n      this.contentDisposition = permissionsOrOptions.contentDisposition;\n      this.contentEncoding = permissionsOrOptions.contentEncoding;\n      this.contentLanguage = permissionsOrOptions.contentLanguage;\n      this.contentType = permissionsOrOptions.contentType;\n\n      if (permissionsOrOptions.userDelegationKey) {\n        this.signedOid = permissionsOrOptions.userDelegationKey.signedObjectId;\n        this.signedTenantId = permissionsOrOptions.userDelegationKey.signedTenantId;\n        this.signedStartsOn = permissionsOrOptions.userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = permissionsOrOptions.userDelegationKey.signedExpiresOn;\n        this.signedService = permissionsOrOptions.userDelegationKey.signedService;\n        this.signedVersion = permissionsOrOptions.userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = permissionsOrOptions.preauthorizedAgentObjectId;\n        this.correlationId = permissionsOrOptions.correlationId;\n      }\n    } else {\n      this.services = services;\n      this.resourceTypes = resourceTypes;\n      this.expiresOn = expiresOn;\n      this.permissions = permissionsOrOptions;\n      this.protocol = protocol;\n      this.startsOn = startsOn;\n      this.ipRangeInner = ipRange;\n      this.encryptionScope = encryptionScope;\n      this.identifier = identifier;\n      this.resource = resource;\n      this.cacheControl = cacheControl;\n      this.contentDisposition = contentDisposition;\n      this.contentEncoding = contentEncoding;\n      this.contentLanguage = contentLanguage;\n      this.contentType = contentType;\n\n      if (userDelegationKey) {\n        this.signedOid = userDelegationKey.signedObjectId;\n        this.signedTenantId = userDelegationKey.signedTenantId;\n        this.signedStartsOn = userDelegationKey.signedStartsOn;\n        this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n        this.signedService = userDelegationKey.signedService;\n        this.signedVersion = userDelegationKey.signedVersion;\n\n        this.preauthorizedAgentObjectId = preauthorizedAgentObjectId;\n        this.correlationId = correlationId;\n      }\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"ses\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n      \"saoid\",\n      \"scid\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"ses\":\n          this.tryAppendQueryParameter(queries, param, this.encryptionScope);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenantId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n        case \"saoid\":\n          this.tryAppendQueryParameter(queries, param, this.preauthorizedAgentObjectId);\n          break;\n        case \"scid\":\n          this.tryAppendQueryParameter(queries, param, this.correlationId);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}