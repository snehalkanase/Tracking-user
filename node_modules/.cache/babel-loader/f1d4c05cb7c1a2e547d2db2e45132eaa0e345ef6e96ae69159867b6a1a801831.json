{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\nexport function getDefaultProxySettings(_proxyUrl) {\n  return undefined;\n}\nexport function proxyPolicy(_proxySettings) {\n  return {\n    create: (_nextPolicy, _options) => {\n      throw proxyNotSupportedInBrowser;\n    }\n  };\n}\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy, options) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n  sendRequest(_request) {\n    throw proxyNotSupportedInBrowser;\n  }\n}","map":{"version":3,"names":["BaseRequestPolicy","proxyNotSupportedInBrowser","Error","getDefaultProxySettings","_proxyUrl","undefined","proxyPolicy","_proxySettings","create","_nextPolicy","_options","ProxyPolicy","constructor","nextPolicy","options","sendRequest","_request"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\policies\\proxyPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n} from \"./requestPolicy\";\nimport { HttpOperationResponse } from \"../httpOperationResponse\";\nimport { ProxySettings } from \"../serviceClient\";\nimport { WebResourceLike } from \"../webResource\";\n\nconst proxyNotSupportedInBrowser = new Error(\"ProxyPolicy is not supported in browser environment\");\n\nexport function getDefaultProxySettings(_proxyUrl?: string): ProxySettings | undefined {\n  return undefined;\n}\n\nexport function proxyPolicy(_proxySettings?: ProxySettings): RequestPolicyFactory {\n  return {\n    create: (_nextPolicy: RequestPolicy, _options: RequestPolicyOptions) => {\n      throw proxyNotSupportedInBrowser;\n    },\n  };\n}\n\nexport class ProxyPolicy extends BaseRequestPolicy {\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n    throw proxyNotSupportedInBrowser;\n  }\n\n  public sendRequest(_request: WebResourceLike): Promise<HttpOperationResponse> {\n    throw proxyNotSupportedInBrowser;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SACEA,iBAAiB,QAIZ,iBAAiB;AAKxB,MAAMC,0BAA0B,GAAG,IAAIC,KAAK,CAAC,qDAAqD,CAAC;AAEnG,OAAM,SAAUC,uBAAuBA,CAACC,SAAkB;EACxD,OAAOC,SAAS;AAClB;AAEA,OAAM,SAAUC,WAAWA,CAACC,cAA8B;EACxD,OAAO;IACLC,MAAM,EAAEA,CAACC,WAA0B,EAAEC,QAA8B,KAAI;MACrE,MAAMT,0BAA0B;IAClC;GACD;AACH;AAEA,OAAM,MAAOU,WAAY,SAAQX,iBAAiB;EAChDY,YAAYC,UAAyB,EAAEC,OAA6B;IAClE,KAAK,CAACD,UAAU,EAAEC,OAAO,CAAC;IAC1B,MAAMb,0BAA0B;EAClC;EAEOc,WAAWA,CAACC,QAAyB;IAC1C,MAAMf,0BAA0B;EAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}