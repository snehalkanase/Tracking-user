{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { Service, Container, Blob, PageBlob, AppendBlob, BlockBlob } from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nexport class StorageClient extends StorageClientContext {\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url, options) {\n    super(url, options);\n    this.service = new Service(this);\n    this.container = new Container(this);\n    this.blob = new Blob(this);\n    this.pageBlob = new PageBlob(this);\n    this.appendBlob = new AppendBlob(this);\n    this.blockBlob = new BlockBlob(this);\n  }\n}","map":{"version":3,"names":["Service","Container","Blob","PageBlob","AppendBlob","BlockBlob","StorageClientContext","StorageClient","constructor","url","options","service","container","blob","pageBlob","appendBlob","blockBlob"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\generated\\src\\storageClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob\n} from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends StorageClientContext {\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    super(url, options);\n    this.service = new Service(this);\n    this.container = new Container(this);\n    this.blob = new Blob(this);\n    this.pageBlob = new PageBlob(this);\n    this.appendBlob = new AppendBlob(this);\n    this.blockBlob = new BlockBlob(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n"],"mappings":"AAAA;;;;;;;AAQA,SACEA,OAAO,EACPC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,UAAU,EACVC,SAAS,QACJ,cAAc;AACrB,SAASC,oBAAoB,QAAQ,wBAAwB;AAG7D,OAAM,MAAOC,aAAc,SAAQD,oBAAoB;EACrD;;;;;;EAMAE,YAAYC,GAAW,EAAEC,OAAqC;IAC5D,KAAK,CAACD,GAAG,EAAEC,OAAO,CAAC;IACnB,IAAI,CAACC,OAAO,GAAG,IAAIX,OAAO,CAAC,IAAI,CAAC;IAChC,IAAI,CAACY,SAAS,GAAG,IAAIX,SAAS,CAAC,IAAI,CAAC;IACpC,IAAI,CAACY,IAAI,GAAG,IAAIX,IAAI,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACY,QAAQ,GAAG,IAAIX,QAAQ,CAAC,IAAI,CAAC;IAClC,IAAI,CAACY,UAAU,GAAG,IAAIX,UAAU,CAAC,IAAI,CAAC;IACtC,IAAI,CAACY,SAAS,GAAG,IAAIX,SAAS,CAAC,IAAI,CAAC;EACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}