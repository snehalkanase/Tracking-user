{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport function getDefaultUserAgentKey() {\n  return \"x-ms-useragent\";\n}\nexport function getPlatformSpecificData() {\n  const navigator = self.navigator;\n  const osInfo = {\n    key: \"OS\",\n    value: (navigator.oscpu || navigator.platform).replace(\" \", \"\")\n  };\n  return [osInfo];\n}","map":{"version":3,"names":["getDefaultUserAgentKey","getPlatformSpecificData","navigator","self","osInfo","key","value","oscpu","platform","replace"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\core-http\\src\\policies\\msRestUserAgentPolicy.browser.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"browser\" section in package.json.\n */\n\nimport { TelemetryInfo } from \"./userAgentPolicy\";\n\ninterface NavigatorEx extends Navigator {\n  // oscpu is not yet standards-compliant, but can not be undefined in TypeScript 3.6.2\n  readonly oscpu: string;\n}\n\nexport function getDefaultUserAgentKey(): string {\n  return \"x-ms-useragent\";\n}\n\nexport function getPlatformSpecificData(): TelemetryInfo[] {\n  const navigator = self.navigator as NavigatorEx;\n  const osInfo = {\n    key: \"OS\",\n    value: (navigator.oscpu || navigator.platform).replace(\" \", \"\"),\n  };\n\n  return [osInfo];\n}\n"],"mappings":"AAAA;AACA;AAaA,OAAM,SAAUA,sBAAsBA,CAAA;EACpC,OAAO,gBAAgB;AACzB;AAEA,OAAM,SAAUC,uBAAuBA,CAAA;EACrC,MAAMC,SAAS,GAAGC,IAAI,CAACD,SAAwB;EAC/C,MAAME,MAAM,GAAG;IACbC,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,CAACJ,SAAS,CAACK,KAAK,IAAIL,SAAS,CAACM,QAAQ,EAAEC,OAAO,CAAC,GAAG,EAAE,EAAE;GAC/D;EAED,OAAO,CAACL,MAAM,CAAC;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}