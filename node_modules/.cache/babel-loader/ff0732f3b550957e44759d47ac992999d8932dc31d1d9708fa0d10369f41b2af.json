{"ast":null,"code":"import _createClass from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/Genxhire/Projects/Website/esurveillance-local-tracker/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { Service, Container, Blob, PageBlob, AppendBlob, BlockBlob } from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nexport var StorageClient = /*#__PURE__*/function (_StorageClientContext) {\n  _inherits(StorageClient, _StorageClientContext);\n  var _super = _createSuper(StorageClient);\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  function StorageClient(url, options) {\n    var _this;\n    _classCallCheck(this, StorageClient);\n    _this = _super.call(this, url, options);\n    _this.service = new Service(_assertThisInitialized(_this));\n    _this.container = new Container(_assertThisInitialized(_this));\n    _this.blob = new Blob(_assertThisInitialized(_this));\n    _this.pageBlob = new PageBlob(_assertThisInitialized(_this));\n    _this.appendBlob = new AppendBlob(_assertThisInitialized(_this));\n    _this.blockBlob = new BlockBlob(_assertThisInitialized(_this));\n    return _this;\n  }\n  return _createClass(StorageClient);\n}(StorageClientContext);","map":{"version":3,"names":["Service","Container","Blob","PageBlob","AppendBlob","BlockBlob","StorageClientContext","StorageClient","_StorageClientContext","_inherits","_super","_createSuper","url","options","_this","_classCallCheck","call","service","_assertThisInitialized","container","blob","pageBlob","appendBlob","blockBlob","_createClass"],"sources":["C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\node_modules\\@azure\\storage-blob\\src\\generated\\src\\storageClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  Service,\n  Container,\n  Blob,\n  PageBlob,\n  AppendBlob,\n  BlockBlob\n} from \"./operations\";\nimport { StorageClientContext } from \"./storageClientContext\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nexport class StorageClient extends StorageClientContext {\n  /**\n   * Initializes a new instance of the StorageClient class.\n   * @param url The URL of the service account, container, or blob that is the target of the desired\n   *            operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    super(url, options);\n    this.service = new Service(this);\n    this.container = new Container(this);\n    this.blob = new Blob(this);\n    this.pageBlob = new PageBlob(this);\n    this.appendBlob = new AppendBlob(this);\n    this.blockBlob = new BlockBlob(this);\n  }\n\n  service: Service;\n  container: Container;\n  blob: Blob;\n  pageBlob: PageBlob;\n  appendBlob: AppendBlob;\n  blockBlob: BlockBlob;\n}\n"],"mappings":";;;;;AAAA;;;;;;;AAQA,SACEA,OAAO,EACPC,SAAS,EACTC,IAAI,EACJC,QAAQ,EACRC,UAAU,EACVC,SAAS,QACJ,cAAc;AACrB,SAASC,oBAAoB,QAAQ,wBAAwB;AAG7D,WAAaC,aAAc,0BAAAC,qBAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,qBAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EACzB;;;;;;EAMA,SAAAA,cAAYK,GAAW,EAAEC,OAAqC;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAR,aAAA;IAC5DO,KAAA,GAAAJ,MAAA,CAAAM,IAAA,OAAMJ,GAAG,EAAEC,OAAO;IAClBC,KAAA,CAAKG,OAAO,GAAG,IAAIjB,OAAO,CAAAkB,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IAChCA,KAAA,CAAKK,SAAS,GAAG,IAAIlB,SAAS,CAAAiB,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IACpCA,KAAA,CAAKM,IAAI,GAAG,IAAIlB,IAAI,CAAAgB,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IAC1BA,KAAA,CAAKO,QAAQ,GAAG,IAAIlB,QAAQ,CAAAe,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IAClCA,KAAA,CAAKQ,UAAU,GAAG,IAAIlB,UAAU,CAAAc,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IACtCA,KAAA,CAAKS,SAAS,GAAG,IAAIlB,SAAS,CAAAa,sBAAA,CAAAJ,KAAA,CAAK,CAAC;IAAC,OAAAA,KAAA;EACvC;EAAC,OAAAU,YAAA,CAAAjB,aAAA;AAAA,EAfgCD,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}