[{"C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\index.js":"1","C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\App.js":"2","C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\pages\\error.jsx":"3","C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\pages\\homes.jsx":"4"},{"size":490,"mtime":1688447077437,"results":"5","hashOfConfig":"6"},{"size":3226,"mtime":1688643956806,"results":"7","hashOfConfig":"6"},{"size":347,"mtime":1688469005857,"results":"8","hashOfConfig":"6"},{"size":2549,"mtime":1688622525844,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"138r9zc",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\index.js",[],[],[],"C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\App.js",["24","25"],[],"import jwt_decode from \"jwt-decode\";\nimport Error from './pages/error';\nimport Home from './pages/homes';\nimport React, { useEffect, useState } from 'react';\n\n\n\nfunction App() {\n  const [screen, setScreen] = useState('Initial');\n  const [location, setLocation] = useState('');\n  const [name, setName] = useState('');\n  const queryParameters = new URLSearchParams(window.location.search);\n  const token = queryParameters.get('token');\n// const [PermissionStatus, setPermissionStatus] = useState('')\nconst checkPermission = React.useCallback(()=>{\n\n  if('geolocation' in navigator){\n    navigator.permissions.query({name: 'geolocation'}).then(result => {\n       if(result.state === \"granted\"){\n         setScreen('Home');\n       }else if(result.state === 'prompt'){\n        setScreen('No-GPS');\n        requestPermission()\n       } else{\n        setScreen('Error')\n       }\n    }).catch(error => {\n      console.error('Error checking location permission:', error);\n    });\n  }\n  else{\n    setScreen('No-GPS')\n  }\n},[]);\n\n  useEffect(() => {\n    try {\n      const decoded = jwt_decode(token);\n      console.log(decoded);\n      setName(decoded.name);\n      const expiryTime = decoded.exp;\n      const currentTime = Math.floor(Date.now() / 1000);\n      if (currentTime < expiryTime) {\n        checkPermission();\n      } else {\n        setScreen('Expired');\n      }\n    } catch (error) {\n      setScreen('Invalid');\n    }\n  },[token, checkPermission]);\n\n\n  const requestPermission = () => {\n    navigator.geolocation.getCurrentPosition(\n      (position)=>{\n        console.log(position);\n        setScreen('Home') \n      },\n      (error)=>{\n        console.log(\"This is an error.\")\n        console.log(error)\n      },\n      { enableHighAccuracy: true, timeout: 5000 }\n    );\n  }\n\n  const getLocation = React.useCallback(() => {\n    if (!navigator.geolocation) {\n      console.log(\"Geolocation is not supported by your browser\");\n    } else {\n      navigator.geolocation.getCurrentPosition((position) =>{\n        console.log(position)\n      });\n    }\n  }, [])\n\n  switch (screen) {\n    case 'Initial':\n      return (\n        <div>\n          <Error image={'expired.svg'} title={'Please Wait'} subTitle={'Loading'} />\n        </div>\n      );\n    case 'Home':\n      return (\n        <div>\n          <Home name={name} />\n        </div>\n      );\n    case 'Expired':\n      return (\n        <div>\n          <Error\n            image={'expired.svg'}\n            title={'Oops, this link is expired!'}\n            subTitle={'Please request a new link from an administrator'}\n          />\n        </div>\n      );\n    case 'Invalid':\n      return (\n        <div>\n          <Error image={'invalid.svg'} title={'Test'} subTitle={'Test SubTitle'} />\n        </div>\n      );\n    case 'No-GPS':\n      return (\n        <div>\n          <Error image={'no_gps.svg'} title={'No GPS!'} subTitle={\"Satellite can't find you\"} />\n          <button onClick={getLocation}>get location</button>\n        </div>\n      );\n    default:\n      return (\n        <div>\n          <Error image={'no_gps.svg'} title={'Error'} subTitle={\"Something went wrong\"} />\n          <button onClick={getLocation}>get location</button>\n        </div>\n      );\n  }\n}\nexport default App;\n","C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\pages\\error.jsx",[],[],"C:\\Users\\Genxhire\\Projects\\Website\\esurveillance-local-tracker\\src\\pages\\homes.jsx",[],[],{"ruleId":"26","severity":1,"message":"27","line":10,"column":10,"nodeType":"28","messageId":"29","endLine":10,"endColumn":18},{"ruleId":"26","severity":1,"message":"30","line":10,"column":20,"nodeType":"28","messageId":"29","endLine":10,"endColumn":31},"no-unused-vars","'location' is assigned a value but never used.","Identifier","unusedVar","'setLocation' is assigned a value but never used."]